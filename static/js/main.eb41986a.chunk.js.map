{"version":3,"sources":["Components/PlayerRanking.js","Components/TeamRanking.js","Components/VideoClip.js","Components/Homepage.js","Components/Navibar.js","App.js","serviceWorker.js","index.js","Images/3x3logomain.png","Images/afreeca.png","Images/bacchus.png","Images/descente.png","Images/hansol.png","Images/hanwool.png","Images/scorecenter.png"],"names":["PlayerRanking","Component","TeamRanking","VideoClip","Meta","Card","Homepage","style","display","justifyContent","flexWrap","width","textAlign","hoverable","marginRight","height","marginTop","cover","src","afreeca","title","bacchus","descente","hanwool","hansol","scorecenter","Header","Layout","Content","Footer","Sider","Navibar","backgroundColor","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","borderStyle","mainlogo","className","theme","mode","defaultSelectedKeys","Item","key","icon","HomeFilled","to","TrophyFilled","YoutubeFilled","padding","margin","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.eb41986a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PlayerRanking extends Component {\n\n    render() {\n        return (\n            <div>\n\n                PlayerRanking\n\n            </div>\n        )\n    }\n}\n\n\nexport default PlayerRanking;","import React, { Component } from 'react';\n\nclass TeamRanking extends Component {\n\n    render() {\n        return (\n            <div>\n\n                TeamRanking\n\n            </div>\n        )\n    }\n}\n\n\nexport default TeamRanking;","import React, { Component } from 'react';\n\nclass VideoClip extends Component {\n\n    render() {\n        return (\n            <div>\n\n                VideoClip\n\n            </div>\n        )\n    }\n}\n\n\nexport default VideoClip;","import React, { Component } from 'react';\nimport afreeca from '../Images/afreeca.png';\nimport bacchus from '../Images/bacchus.png';\nimport descente from '../Images/descente.png';\nimport hansol from '../Images/hansol.png';\nimport hanwool from '../Images/hanwool.png';\nimport scorecenter from '../Images/scorecenter.png';\n\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div style={{display:'flex', justifyContent:'center',flexWrap:'wrap'}}>\n                <div style={{width:'100%', textAlign:'center'}}>\n                    <h2>Team</h2>\n                </div>\n\n                \n\n\n                <Card\n                    hoverable\n                    style={{ width: 340, marginRight:50, height:'300px', marginTop:'50px' }}\n                    cover={<img src={afreeca} />}\n                >\n                    <Meta title=\"Afreeca Freecs\" style={{textAlign:'center'}}/>\n                </Card>\n\n                <Card\n                    hoverable\n                    style={{ width: 340, marginRight:50, height:'300px', marginTop:'50px' }}\n                    cover={<img src={bacchus} />}\n                >\n                    <Meta title=\"bacchus\" style={{textAlign:'center'}}/>\n                </Card>\n\n                <Card\n                    hoverable\n                    style={{ width: 340, height:'300px', marginTop:'50px'}}\n                    cover={<img src={descente} />}\n                >\n                    <Meta title=\"Descente\" style={{textAlign:'center'}}/>\n                </Card>\n\n                <Card\n                    hoverable\n                    style={{ width: 340, marginRight:50, height:'300px', marginTop:'50px' }}\n                    cover={<img src={hanwool} />}\n                >\n                    <Meta title=\"Hanwool Const.\" style={{textAlign:'center'}}/>\n                </Card>\n\n                <Card\n                    hoverable\n                    style={{ width: 340, marginRight:50, height:'300px', marginTop:'50px' }}\n                    cover={<img src={hansol} />}\n                >\n                    <Meta title=\"Hansol Remicon\" style={{textAlign:'center'}}/>\n                </Card>\n\n                <Card\n                    hoverable\n                    style={{ width: 340, height:'300px', marginTop:'50px' }}\n                    cover={<img src={scorecenter} />}\n                >\n                    <Meta title=\"Score Center\" style={{textAlign:'center'}}/>\n                </Card>\n\n\n            </div>\n        )\n    }\n}\n\n\nexport default Homepage;","import { Layout, Menu } from 'antd';\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined , YoutubeOutlined , GoldOutlined, TrophyFilled, YoutubeFilled, HomeFilled   } from '@ant-design/icons';\nimport React, { Component } from 'react';\nimport mainlogo from '../Images/3x3logomain.png'\nimport '../CSS/Navibar.css';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport PlayerRanking from './PlayerRanking';\nimport TeamRanking from './TeamRanking';\nimport VideoClip from './VideoClip';\nimport Homepage from './Homepage';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass Navibar extends Component {\n\n  render() {\n    return (\n      <Router>\n\n        <Layout style={{ height: \"100vh\", backgroundColor: 'white' }}>\n\n\n\n          <Sider\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n            onBreakpoint={broken => {\n              console.log(broken);\n            }}\n            onCollapse={(collapsed, type) => {\n              console.log(collapsed, type);\n            }}\n            style={{ backgroundColor: 'white' }}\n          >\n\n            {/* main logo */}\n            <div style={{ borderStyle: 'none', width: '200px', height: '80px', marginTop: '30px' }}>\n              <img src={mainlogo} style={{ width: '200px', height: '80px' }}></img>\n            </div>\n\n\n            <div className=\"logo\" />\n            <Menu theme=\"white\" mode=\"inline\" defaultSelectedKeys={['1']} style={{ marginTop: '100px' }}>\n              <Menu.Item key=\"1\" icon={<HomeFilled />}>\n                  <Link className=\"linkitem\" to=\"/homepage\">Homepage</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<TrophyFilled />}>\n                <Link className=\"linkitem\" to=\"/teamranking\">Team Rank</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<TrophyFilled />}>\n                <Link className=\"linkitem\" to=\"/playerranking\">Player Rank</Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\" icon={<YoutubeFilled />}>\n                <Link className=\"linkitem\" to=\"/videoclip\">Video Clip</Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n              <Content style={{ margin: '24px 16px 0' }}>\n                  <div>\n                      <Route path='/homepage' component={Homepage} />\n                      <Route path='/teamranking' component={TeamRanking} />\n                      <Route path='/playerranking' component={PlayerRanking} />\n                      <Route path='/videoclip' component={VideoClip} />\n                  </div>\n              </Content>\n            <Footer style={{ textAlign: 'center' }}>Email: snstkfka02@hanmail.net <br /> Github: https://github.com/pyosoo</Footer>\n          </Layout>\n        </Layout>\n\n\n\n        \n      </Router>\n\n    )\n  }\n}\n\n\nexport default Navibar;","import React, {Component} from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport Navibar from './Components/Navibar.js';\n\nclass App extends Component {\n  render(){\n    return (\n     \n        <Navibar />\n  \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App /> ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/3x3logomain.56e6bb01.png\";","module.exports = __webpack_public_path__ + \"static/media/afreeca.cfe5a287.png\";","module.exports = __webpack_public_path__ + \"static/media/bacchus.9c9f32a6.png\";","module.exports = __webpack_public_path__ + \"static/media/descente.33bb128d.png\";","module.exports = __webpack_public_path__ + \"static/media/hansol.b30cc523.png\";","module.exports = __webpack_public_path__ + \"static/media/hanwool.d701cd1d.png\";","module.exports = __webpack_public_path__ + \"static/media/scorecenter.f104d40b.png\";"],"sourceRoot":""}